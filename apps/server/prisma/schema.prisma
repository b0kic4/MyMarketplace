// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  clerkUserId   String
  username      String
  email         String
  imageUrl      String
  fullName      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  products      Product[] @relation("userProducts")
  savedProducts Product[] @relation("savedProducts")
  cart          Cart?     @relation("userCart")
}

model Image {
  id        Int      @id @default(autoincrement())
  imageUrl  String?
  isLogo    String?
  productId Int?
  product   Product? @relation(fields: [productId], references: [id])
}

model Product {
  id                  Int      @id @default(autoincrement())
  title               String
  description         String
  images              Image[]
  categoryType        String
  price               String
  sizes               String
  colors              String
  material            String
  texture             String
  stock               Int
  shippingInformation String
  isChecked           Boolean
  isUsed              Boolean
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  userId              Int
  user                User?    @relation(fields: [userId], references: [id], name: "userProducts")
  savedByUsers        User[]   @relation("savedProducts")
  productCart         Cart?    @relation("productCart")
  reviews             Review[]
}

model Cart {
  id             Int             @id @default(autoincrement())
  userId         Int @unique
  productId      Int @unique
  purchasedAt    DateTime?
  deliveredAt    DateTime?
  quantity       Int             @default(1)
  user           User            @relation("userCart", fields: [userId], references: [id])
  product        Product         @relation(fields: [productId], references: [id], "productCart")
  purchaseStatus PurchaseStatus?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  @@unique([userId, productId], name: "unique_user_product")
}


model Review {
  id        Int     @id @default(autoincrement())
  content   String
  rating    Int
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

enum PurchaseStatus {
  NotPurchased
  Purchased
  Delivering
  Delivered
}
